generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          String    @default("user")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts      Account[]
  sessions      Session[]
  searchHistory SearchHistory[]
  favorites     Favorite[]
  preferences   UserPreferences?
  feedback      HsnFeedback[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model SearchHistory {
  id        String   @id @default(cuid())
  userId    String
  query     String
  results   Json?
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Favorite {
  id          String   @id @default(cuid())
  userId      String
  hsnCode     String
  description String
  createdAt   DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, hsnCode])
  @@index([userId])
}

model UserPreferences {
  id            String @id @default(cuid())
  userId        String @unique
  theme         String @default("system")
  language      String @default("en")
  notifications Json?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model HsnFeedback {
  id          String   @id @default(cuid())
  userId      String?
  hsnCode     String
  description String?
  rating      Int
  accuracy    String?
  helpful     Boolean?
  comments    String?
  createdAt   DateTime @default(now())

  user User? @relation(fields: [userId], references: [id], onDelete: SetNull)

  @@index([userId])
  @@index([hsnCode])
  @@index([createdAt])
}